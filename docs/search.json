[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"PS2010 Psychological Research Methods Analysis Workshop Codebook.","code":""},{"path":"index.html","id":"about-this-code-book","chapter":"Preface","heading":"0.1 About this Code Book","text":"code book contains information, exercises, code PS2010 workshop sessions.resource work progress, ’re continually updating improving .spot error something doesn’t look quite right, please get touch:luke.kendrick@rhul.ac.uk.","code":""},{"path":"index.html","id":"license","chapter":"Preface","heading":"0.2 License","text":"work licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt material non-commercial purposes, appropriate credit license. adapt material, must distribute contributions license.","code":""},{"path":"index.html","id":"citation","chapter":"Preface","heading":"0.3 Citation","text":"Kendrick, L. T. (2025). PS2010 Workshop Code Book (Version 1.0). https://luke-kendrick.github.io/r_codebook","code":""},{"path":"workshop-1-data-handling-skills.html","id":"workshop-1-data-handling-skills","chapter":"1 Workshop 1: Data Handling Skills","heading":"1 Workshop 1: Data Handling Skills","text":"Aims:Practice importing .csv data file RStudio using read_csv()Practice importing .csv data file RStudio using read_csv()Practice inspecting data RStudio.Practice inspecting data RStudio.Use different data wrangling functions develop data handling skills.Use different data wrangling functions develop data handling skills.Check basic summary statistics.Check basic summary statistics.","code":""},{"path":"workshop-1-data-handling-skills.html","id":"exercise-1-import-the-data","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.1 Exercise 1: Import the Data","text":"Import Data File guess_who.csvBefore begin, need tidyverse package loaded.Next import data file store object called dataset.see error saying find function read_csv() usually means loaded (installed) tidyverse package.","code":"\ninstall.packages(\"tidyverse\") #install tidyverse if you do not have it.\nlibrary(tidyverse) #loads tidyverse.\ndataset <- read_csv(\"guess_who.csv\")"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-2-inspect-and-check-your-data","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.2 Exercise 2: Inspect and Check Your Data","text":"Take look newly imported data fileCheck top right panel (environment) also use code inspect data set.really important look variable names ’ll using code later .Answer Question 2.1 - 2.2 worksheet.","code":"\nview(dataset) # this will open the data in a new tab.\nnames(dataset) # this will show the variable names."},{"path":"workshop-1-data-handling-skills.html","id":"exercise-3-change-a-variable-name","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.3 Exercise 3: Change a Variable Name","text":"One variable names quite long. can annoying keep typing outChange variable name do_you_own_a_pet pet. rename() function let rename variable.Check worked:","code":"\ndataset <- dataset %>%\n  rename(pet = do_you_own_a_pet)\nnames(dataset) # ask for the variable names again"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-4-remove-a-variable","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.4 Exercise 4: Remove a Variable","text":"really care age variable next exercises.Let’s remove .code create new object (start removing things, best keep original data file called dataset environment)code :Create new object called mydata.Create new object called mydata.Take original data called datasetTake original data called dataset“” %>%“” %>%Use select() function remove age placing minus symbol - front .Use select() function remove age placing minus symbol - front .now , use object called mydata original data set.","code":"\nmydata <- dataset %>%\n  select(-age)"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-5-filter-cases","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.5 Exercise 5: Filter Cases","text":"can select particular cases data setFor example, ask: many people city Birmingham using code :Check console (bottom left panel) answer.code :Take mydata …Take mydata …Filter city variable.Filter city variable.use double equals symbol == specify exact match.use double equals symbol == specify exact match.’ve added “birmingham” speech marks. Note lowercase match data set …’ve added “birmingham” speech marks. Note lowercase match data set …count() number data points.count() number data points.Adapt code answer question 5.1 worksheet.","code":"\nmydata %>%\n  filter(city == \"birmingham\") %>%\n  count()"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-6-guess-who","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.6 Exercise 6: Guess Who?","text":"can filter based multiple criteria.code show us someone Brighton, dog, drink coffee.can also use less /symbols filter data, example, show people maths enjoyment score less 20:Use learned adapt code play GUESS ? complete questions 6.1-6.2 worksheet.","code":"\nmydata %>%\n  filter(city == \"brighton\", pet == \"dog\", coffee == 0)\nmydata %>%\n  filter(maths < 20)"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-7-create-a-new-variable","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.7 Exercise 7: Create a New Variable","text":"Sometimes might want compute new scores variablesAdd three enjoyment scores maths, science, art create overall score called total_score.code :Take mydata overwrite (ready add new variable) …Take mydata overwrite (ready add new variable) …Use mutate() function create new variable named total_score equal = maths + science + art.Use mutate() function create new variable named total_score equal = maths + science + art.View data set look new column see worked.Now, can look highest lowest total enjoyment score.slice_min find row lowest score:slice_max find row highest score:Answer questions 7.1-7.2 worksheet.","code":"\nmydata <- mydata %>%\n  mutate(total_score = maths + science + art)\nview(mydata)\nmydata %>%\n  slice_min(total_score)\nmydata %>%\n  slice_max(total_score)"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-8-counting-and-removing-missing-data","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.8 Exercise 8: Counting and Removing Missing Data","text":"Real data sets often missing data pointsDifferent people differing views treat missing data points. today, just identify remove . view data, might notice blanks degree everyone studying one.code :Calculate total number using sum() …Calculate total number using sum() …missing data points (R calls .na)missing data points (R calls .na)can direct particular column using mydata$degree. essentially means “look mydata column called degree. use dollar sign $ specify column.can direct particular column using mydata$degree. essentially means “look mydata column called degree. use dollar sign $ specify column.want remove , can use filter() !Note: overwrite mydata remove cases.Answer question 8.1 worksheet.","code":"\nsum(is.na(mydata$degree))\nmydata <- mydata %>% \n  filter(!is.na(degree))"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-9-summary-statistics","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.9 Exercise 9: Summary Statistics","text":"might want know average enjoyment score?can use code look across data set whole:Look output console (bottom left panel) answer questions 9.1-9.3 worksheet.","code":"\nsummary(mydata)"},{"path":"workshop-1-data-handling-skills.html","id":"exercise-10-fixing-lukes-broken-code","chapter":"1 Workshop 1: Data Handling Skills","heading":"1.10 Exercise 10: Fixing Luke’s Broken Code","text":"Help!! code working. need help fix …Fix code work many coffees drunk person canterbury studying medicine. Try running code first work doesn’t work!Fix code work name person London, hamster, studies psychology, drink coffee. Try running code first work doesn’t work!Answer questions 10.1-10.2 worksheet.get stuck, use hints .Check spelling errors: two .Check spelling errors: two .Make sure use double equals specifying label ==.Make sure use double equals specifying label ==.Use quote marks necessary. missing.Use quote marks necessary. missing.Code case sensitive. capital letter shouldn’t one.Code case sensitive. capital letter shouldn’t one.Use symbols correctly. want use pipe %>% filter.Use symbols correctly. want use pipe %>% filter.Use symbols correctly. > <.Use symbols correctly. > <.Well Done. reached end workshop.","code":"\nmydata %>%\n  filter(city = \"canterburY\", degree == medicine)\nmydata =\n  filter(city == \"London\", pet == \"hamsta\", degree == \"psychology\", coffee >1)"},{"path":"workshop-2-summarising-and-describing-data.html","id":"workshop-2-summarising-and-describing-data","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2 Workshop 2: Summarising and Describing Data","text":"Aims:Practice importing .csv data file RStudio using read_csv()Practice importing .csv data file RStudio using read_csv()Practice inspecting data RStudio.Practice inspecting data RStudio.Calculate mean standard deviation using group_by() summarise() functions.Calculate mean standard deviation using group_by() summarise() functions.Visually inspect data using plots describe data distributions.Visually inspect data using plots describe data distributions.","code":""},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-1-import-the-data-1","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.1 Exercise 1: Import the Data","text":"Import Data File: stroop.csvBefore begin, need tidyverse package loaded.Next import data file store object called dataset.see error saying find function read_csv() usually means loaded (installed) tidyverse package.","code":"\ninstall.packages(\"tidyverse\") #install tidyverse if you do not have it.\nlibrary(tidyverse) #loads tidyverse.\ndataset <- read_csv(\"stroop.csv\")"},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-2-inspect-and-check-your-data-1","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.2 Exercise 2: Inspect and Check Your Data","text":"Take look newly imported data fileCheck top right panel (environment) also use code inspect data set.really important look variable names ’ll using code later .","code":"\nview(dataset) # this will open the data in a new tab.\nnames(dataset) # this will show the variable names."},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-3-calculate-the-stroop-inteference-score","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.3 Exercise 3: Calculate the Stroop Inteference Score","text":"Sometimes might want compute new scores variablesCalculate Stroop interference measure. difference incongruent congruent conditions. Take incongruent reaction times subtract congruent reaction times using code :code :Create object called mydata using original dataset …Create object called mydata using original dataset …Use mutate() function create new variable named int equal = incongruent - (minus) congruent.Use mutate() function create new variable named int equal = incongruent - (minus) congruent.View data set look new column see worked. Note: check final column see int appeared.exactly Stroop Interference thingy? want learn , see .interference measure milliseconds (msecs) amount extra time took participant answer incongruent (trickier trials colours match word) compared congruent trials (easier trial colours match work).sense, many milliseconds slower need focus attention engage executive functions fight urge read word rather name colour.smaller number perhaps indicative better attention/executive functioning processes!Answer questions 3.1-3.2 worksheet.","code":"\nmydata <- dataset %>%\n  mutate(int = incongruent - congruent)\nview(mydata)"},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-4-calculate-descriptive-statistics","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.4 Exercise 4: Calculate Descriptive Statistics","text":"Just shown lecture, use code calculate mean standard deviation Stroop interference int. Remember, want use int calculated exercise 3.need change NULL match data set. Try give go first, aren’t sure look help.Think :NULL1: name variable split data file (e.g., grouping variable/independent variable called mydata)NULL1: name variable split data file (e.g., grouping variable/independent variable called mydata)NULL2: name score want find mean standard deviation (e.g., dependent variable called mydata)NULL2: name score want find mean standard deviation (e.g., dependent variable called mydata)look environment (top right panel) see new object called desc. descriptive statistics stored. called desc can call anything like. best keep object names short informative. can now view object using view() function.Answer questions 4.1-4.2 worksheet.","code":"\ndesc <-  mydata %>%\n  group_by(NULL1) %>%\n  summarise(mean_int = mean(NULL2),\n            sd_int = sd(NULL2))\ndesc <-  mydata %>%\n  group_by(drink) %>%\n  summarise(mean_int = mean(int),\n            sd_int = sd(int))\nview(desc)"},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-5-explore-data-with-plots","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.5 Exercise 5: Explore Data with Plots","text":"Generate box plot:Generate histograms:Generate density plots:Answer questions 5.1-5.2 worksheet.","code":"\nggplot(mydata, aes(x = drink, y = int)) +\n  geom_boxplot(width = .4)\nggplot(mydata, aes(x = int, fill = drink)) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~ drink)\nggplot(mydata, aes(x = int, fill = drink)) +\n  geom_density(alpha = .5) +\n  facet_wrap(~ drink)"},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-6-what-does-facet_wrap-do","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.6 Exercise 6: What Does facet_wrap() do?","text":"Re-run density plot code, except time delete final line. show facet_wrap() . notice plot now?Use code without facet_wrap().Answer question 6.1 worksheet.","code":"\nggplot(mydata, aes(x = int, fill = drink)) +\n  geom_density(alpha = .5)"},{"path":"workshop-2-summarising-and-describing-data.html","id":"exercise-7-save-your-amended-data-file","chapter":"2 Workshop 2: Summarising and Describing Data","heading":"2.7 Exercise 7: Save Your Amended Data File","text":"current data file int column , calculated exercise 3. need save can use next week’s workshop. can overwrite original .csv file using code, save today’s data set.means stroop.csv file computer updated ready use next week! Make sure know saved computer leave. need file next week!Well Done. reached end workshop.","code":"\nwrite.csv(mydata, \"stroop.csv\")"},{"path":"workshop-3-t-tests.html","id":"workshop-3-t-tests","chapter":"3 Workshop 3: t-tests","heading":"3 Workshop 3: t-tests","text":"Aims:Practice running interpreting two-sample t-test RStudio.Practice running interpreting two-sample t-test RStudio.Practice running interpreting paired t-test RStudio.Practice running interpreting paired t-test RStudio.Part OnePart one today’s workshop involved running two-sample t-test, appropriate independent measures design two groups.use data file last week, aiming investigate whether Stroop interference scores (msecs) significantly differ Red Cow group control group.must completed week 2 workshop starting one.","code":""},{"path":"workshop-3-t-tests.html","id":"exercise-1-import-the-data-2","chapter":"3 Workshop 3: t-tests","heading":"3.1 Exercise 1: Import the Data","text":"Import Data File: stroop.csvBefore begin, need following packages:import data file. Make sure int score calculated last week. , need go back complete workshop 2.","code":"\ninstall.packages(\"tidyverse\") #install if needed.\ninstall.packages(\"rstatix\")   #install if needed.\ninstall.packages(\"car\")       #install if needed.\nlibrary(tidyverse)            #load package.\nlibrary(rstatix)              #load package.\nlibrary(car)                  #load package.\nmydata <- read_csv(\"stroop.csv\")"},{"path":"workshop-3-t-tests.html","id":"exercise-2-inspect-and-check-your-data-2","chapter":"3 Workshop 3: t-tests","heading":"3.2 Exercise 2: Inspect and Check Your Data","text":"Take look newly imported data fileCheck top right panel (environment) also use code inspect data set.really important look variable names ’ll using code later .","code":"\nview(mydata) # this will open the data in a new tab.\nnames(mydata) # this will show the variable names."},{"path":"workshop-3-t-tests.html","id":"exercise-3-check-assumptions","chapter":"3 Workshop 3: t-tests","heading":"3.3 Exercise 3: Check Assumptions","text":"","code":""},{"path":"workshop-3-t-tests.html","id":"check-heteroscedasticity-with-levenes-test","chapter":"3 Workshop 3: t-tests","heading":"3.3.1 Check Heteroscedasticity with Levene’s Test","text":"need just use Welch’s t-test instead.need justify decision (e.g., 3rd Year Project), following papers might help:Delacre et al. (2017)Delacre et al. (2017)Ruxton (2006)Ruxton (2006)gentler explanation, see also blog post Daniel Lakens.gentler explanation, see also blog post Daniel Lakens.","code":""},{"path":"workshop-3-t-tests.html","id":"check-normality-with-shapiro-wilk-test-and-histograms","chapter":"3 Workshop 3: t-tests","heading":"3.3.2 Check Normality with Shapiro-Wilk Test and Histograms","text":"need check normality groups separately. can filter groups:use dollar sign $ point R particular column. example, using shapiro.test(redcow$int) saying run Shapiro Test redcow data set specific column called intAgain, want p-values significant. non-significant p-value means data roughly normally distributed. p-value significant, issue indicates data normally distributed.reporting Shapiro-Wilk test, just need report test statistics (w = XX) p-value. example look like:W = 0.98, p = .875You can also visually check data quick histogram:Check plots panel, use blue arrow switch two plots.","code":"\n#first create a data set that contains the control group only\ncontrol <- mydata %>%\n  filter(drink == \"control\")\n#then run the test\nshapiro.test(control$int)\n\n#then create a data set that contains Red Cow drinkers only\nredcow <- mydata %>%\n  filter(drink == \"redcow\")\n#then run the test\nshapiro.test(redcow$int)\nhist(control$int)\nhist(redcow$int)"},{"path":"workshop-3-t-tests.html","id":"exercise-4-run-the-two-sample-t-test-and-ask-for-cohens-d","chapter":"3 Workshop 3: t-tests","heading":"3.4 Exercise 4: Run the Two-Sample t-Test and ask for Cohen’s d","text":"Run t-test.Ask Cohen’s d:Interpret t-test.test significant?test significant?effect size?effect size?significant, groups differ (e.g., use descriptive statistics interpret difference)?significant, groups differ (e.g., use descriptive statistics interpret difference)?Hint: re-use code last week find mean standard deviation two groups.Hint: re-use code last week find mean standard deviation two groups.Answer questions 4.1-4.3 worksheet.Part TwoPart two today’s workshop involved running paired t-test, appropriate repeated measures design two conditions.Let’s switch bit use different scenario experiment new data set.look someone’s resting heart rate might change result drinking can Red Cow.study resting heart rate beats per minute (BPM) measured group participants consuming can Red Cow.independent variable time point: , . dependent variable BPM.","code":"\nt.test(int ~ drink, data = mydata, var.equal = FALSE, alternative = \"two.sided\")\ncohens_d(data = mydata, total_sleep ~ energy_drink, var.equal = FALSE)"},{"path":"workshop-3-t-tests.html","id":"exercise-5-import-the-data","chapter":"3 Workshop 3: t-tests","heading":"3.5 Exercise 5: Import the Data","text":"call object dat (short name data)","code":"\ndat <- read_csv(\"bpm.csv\")"},{"path":"workshop-3-t-tests.html","id":"exercise-6-inspect-and-check-your-data","chapter":"3 Workshop 3: t-tests","heading":"3.6 Exercise 6: Inspect and Check Your Data","text":"Take look newly imported data fileCheck top right panel (environment) also use code inspect data set.","code":"\nview(dat) # this will open the data in a new tab.\nnames(dat) # this will show the variable names."},{"path":"workshop-3-t-tests.html","id":"exercise-7-check-assumptions","chapter":"3 Workshop 3: t-tests","heading":"3.7 Exercise 7: Check Assumptions","text":"need check normality, heteroscedasiticty apply repeated measures designs. However, need ensure difference score normally distributed.interpret report way earlier (exercise 3).Answer questions 7.1-7.2 worksheet.","code":"\ndiff <- dat$after - dat$before  #this will calculate the difference score.\nshapiro.test(diff)              # run the Shapiro test\nhist(diff)                      # also visually inspect data"},{"path":"workshop-3-t-tests.html","id":"exercise-8-run-the-paired-t-test-and-ask-for-cohens-d","chapter":"3 Workshop 3: t-tests","heading":"3.8 Exercise 8: Run the Paired t-Test and ask for Cohen’s d","text":"paired t-test little different compared two-sample t-test.Change NULL1 column first condition.Change NULL1 column first condition.Change NULL2 column second condition.Change NULL2 column second condition.(Hint: need use dollar sign $ specify data set column, e.g., dat$NULL1 dat$NULL2).Try first, need, check solution .Annoyingly, need use different package Cohen’s d paired t-test.Answer questions 8.1-8.2 worksheet. Hint: also need descriptive statistics (see exercise 9 ).","code":"\nt.test(NULL1, NULL2, paired = TRUE)\nt.test(dat$before, dat$after, paired = TRUE)\ninstall.packages(\"effectsize\") #install if needed.\nlibrary(effectsize)\neffectsize::cohens_d(dat$before, dat$after, paired = TRUE)"},{"path":"workshop-3-t-tests.html","id":"exercise-9-calculate-descriptive-statistics","chapter":"3 Workshop 3: t-tests","heading":"3.9 Exercise 9: Calculate Descriptive Statistics","text":"final thing convert data wide format long format. Often repeated measures asking descriptive statistics plots, need data long format.Code explanation:Create new object called longd store long data.Create new object called longd store long data.Base original data set called dat %>%Base original data set called dat %>%pivot_longer()pivot_longer()first argument include columns contain dependent variable. case use :afterwhich take columns (columns just take two ).first argument include columns contain dependent variable. case use :afterwhich take columns (columns just take two ).Next use names_to = tell R want call independent variable. used “time” time point study.Next use names_to = tell R want call independent variable. used “time” time point study.use values_to = tell R want call dependent variable. measure beats per minute, just called “bpm”.use values_to = tell R want call dependent variable. measure beats per minute, just called “bpm”.Pay careful attention lay code. example, notice brackets open close, placement commas move next line.Pay careful attention lay code. example, notice brackets open close, placement commas move next line.created new long data set called longd can use calculate descriptive statistics. first check see difference.Now adapt code ask mean standard deviation.Change NULL1 name independent variable long data file, NULL2 dependent variable. tricky, use names(longd) need reminder variable names revisit notes last week’s workshop.Make note mean standard deviation conditions.Try first, need, check solution .Well Done. reached end workshop.","code":"\nlongd <- dat %>%\n  pivot_longer(\n              before:after,\n              names_to = \"time\",\n              values_to = \"bpm\"\n              )\nview(longd)\nnames(longd)desc <- longd %>%\n  group_by(NULL1) %>%\n  summarise(mean_bpm = mean(NULL2)\n            sd_bpm = sd(NULL2))\ndesc <- longd %>%\n  group_by(time) %>%\n  summarise(mean_bpm = mean(bpm),\n            sd_bpm = sd(bpm))\n\nview(desc)"}]
